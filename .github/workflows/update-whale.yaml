name: Update NAVER Whale in Winget

# lets save some time if i can automate this
# 2025.6 @thejjw

on:
  schedule:
    - cron: '0 0 * * *'  # daily check; adjust as needed
  workflow_dispatch:

jobs:
  update:
    runs-on: windows-2025
    steps:
      - name: update winget
        run: |
          winget upgrade winget --accept-package-agreements --accept-source-agreements --disable-interactivity
        continue-on-error: true

      - name: Checkout winget-pkgs
        uses: actions/checkout@v4
        with:
          repository: microsoft/winget-pkgs
          path: winget-pkgs
          fetch-depth: 1
          sparse-checkout: |
            manifests/n/NAVER/Whale
          sparse-checkout-cone-mode: true

      - name: Install wingetcreate
        run: winget install wingetcreate --silent

      - name: Determine Whale version
        shell: pwsh
        run: |
          $uri = "https://installer-whale.pstatic.net/downloads/sa_installers/WhaleSetupX64.exe"
          $tmp = [System.IO.Path]::GetTempFileName() + ".exe"
          Invoke-WebRequest -Uri $uri -OutFile $tmp
          $newVer = (Get-Item $tmp).VersionInfo.FileVersion
          Write-Output "$newVer" | Out-File newver.txt
          Remove-Item $tmp

      - name: Read new version
        id: getver
        run: |
          $ver = Get-Content newver.txt
          "NEW_VER=$ver" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Read current version from manifest
        id: getcurrent
        shell: pwsh
        run: |
          $dir = "winget-pkgs/manifests/n/NAVER/Whale"
          if (Test-Path $dir) {
            $current = Get-ChildItem $dir -Directory | Select-Object -Expand Name | Sort-Object -Descending | Select-Object -First 1
            "CUR_VER=$current" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          } else {
            "CUR_VER=" | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append
          }

      - name: Decide to update
        run: |
          echo "New: ${{ steps.getver.outputs.NEW_VER }}, Current: ${{ steps.getcurrent.outputs.CUR_VER }}"
        shell: pwsh

      - name: Update Winget only if version changed
        if: ${{ steps.getver.outputs.NEW_VER != steps.getcurrent.outputs.CUR_VER }}
        shell: pwsh
        env:
          PACKAGE_ID: "NAVER.Whale"
          VERSION: ${{ steps.getver.outputs.NEW_VER }}
          URL_X86: "https://installer-whale.pstatic.net/downloads/sa_installers/WhaleSetupX86.exe|x86"
          URL_X64: "https://installer-whale.pstatic.net/downloads/sa_installers/WhaleSetupX64.exe|x64"
          URL_ARM64: "https://installer-whale.pstatic.net/downloads/sa_installers/WhaleSetupARM64.exe|arm64"
          WINGET_PAT: ${{ secrets.WINGET_PAT }}
        run: |
          wingetcreate update $env:PACKAGE_ID `
            --version $env:VERSION `
            --urls $env:URL_X86 $env:URL_X64 $env:URL_ARM64 `
            --submit --token $env:WINGET_PAT

      - name: "Debug: list branch commits"
        if: steps.getver.outputs.NEW_VER != steps.getcurrent.outputs.CUR_VER
        run: |
          git --git-dir=winget-pkgs/.git --work-tree=winget-pkgs branch -vv
        shell: pwsh

      - name: No update needed
        if: steps.getver.outputs.NEW_VER == steps.getcurrent.outputs.CUR_VER
        run: echo "Whale is already up-to-date (version ${{ steps.getver.outputs.NEW_VER }})"
        shell: pwsh
